name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * *'  # daily at midnight UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tags
        id: vars
        run: |
          DATE_TAG=$(date +%F)
          echo "DATE_TAG=$DATE_TAG" >> $GITHUB_ENV
          echo "LATEST_TAG=latest" >> $GITHUB_ENV

      # Build image locally first to inspect digest
      - name: Build Docker image locally
        run: |
          docker buildx build \
            --pull \
            --load \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.DATE_TAG }} \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.LATEST_TAG }} \
            .

      # Check if digest changed
      - name: Check if image digest changed
        id: digest
        run: |
          NEW_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.LATEST_TAG }} | cut -d'@' -f2)
          echo "NEW_DIGEST=$NEW_DIGEST" >> $GITHUB_ENV
          # Get existing digest from Docker Hub
          EXISTING_DIGEST=$(curl -s -H "Authorization: Bearer ${{ secrets.DOCKER_HUB_TOKEN }}" \
            "https://registry.hub.docker.com/v2/${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}/manifests/latest" \
            | jq -r '.config.digest')
          echo "EXISTING_DIGEST=$EXISTING_DIGEST" >> $GITHUB_ENV
          if [ "$NEW_DIGEST" = "$EXISTING_DIGEST" ]; then
            echo "DIGEST_UNCHANGED=true" >> $GITHUB_ENV
          else
            echo "DIGEST_UNCHANGED=false" >> $GITHUB_ENV
          fi

      # Push only if digest changed
      - name: Push Docker image
        if: env.DIGEST_UNCHANGED == 'false'
        run: |
          # Push to Docker Hub
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.DATE_TAG }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.LATEST_TAG }}
          # Push to GHCR
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.DATE_TAG }} ghcr.io/${{ github.repository_owner }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.DATE_TAG }}
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.LATEST_TAG }} ghcr.io/${{ github.repository_owner }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.LATEST_TAG }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.DATE_TAG }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.LATEST_TAG }}
