name: Docker Image CI

permissions:
  contents: read
  packages: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * *'  # daily at midnight UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Log in to GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ajsokolik
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set image tags (date-based + latest)
      - name: Set image tags
        run: |
          DATE_TAG=$(date +%F)
          echo "DATE_TAG=$DATE_TAG" >> $GITHUB_ENV
          echo "LATEST_TAG=latest" >> $GITHUB_ENV

      # Build and push Docker image
      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          pull: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.DATE_TAG }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.LATEST_TAG }}
            ghcr.io/ajsokolik/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.DATE_TAG }}
            ghcr.io/ajsokolik/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.LATEST_TAG }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:latest
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:latest,mode=max
          outputs: type=image,attr=digest

      # Friendly log message
      - name: Show push status
        run: |
          if [ "${{ steps.build.outputs.digest }}" != "" ]; then
            echo "✅ Image built and pushed. Digest: ${{ steps.build.outputs.digest }}"
          else
            echo "ℹ️ No changes detected. Image push was skipped."

      # Create a GitHub release for this build (date-based tag)
      - name: Create GitHub release
        if: steps.build.outputs.digest != ''   # only if image changed
        id: release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.DATE_TAG }}
          release_name: "Build ${{ env.DATE_TAG }}"
          body: |
            Docker image pushed with digest: ${{ steps.build.outputs.digest }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
